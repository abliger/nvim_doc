*usr_06.txt*	Nvim

		     VIM 用户手册 - by Bram Moolenaar
                                  译者: abliger
			  使用语法高亮


黑白的文字是令人厌倦的，增加一些色彩能为你的文件带来生气。这不但看起来漂亮，还能够提高你的工作效率。本章介绍如何使用不同颜色显示不同文本并把它打印出来.

|06.1|	打开它
|06.2|	颜色错误或者没有颜色?
|06.3|	使用不同的颜色
|06.4|	是否使用颜色
|06.5|	带颜色打印
|06.6|	深入阅读

下一章: |usr_07.txt|  编辑更多文件
上一章: |usr_05.txt|  自定义配置
目录:   |usr_toc.txt|

==============================================================================
*06.1*	打开它

使用一个很简单的命令启动它: >

	:syntax enable

大多数情况下，这会让你的文件带上颜色。Vim 会自动检测文件的类型，并调用合适的语 法高亮。一下子注释变成蓝色，关键字变成褐色，而字符串变成红色了。这使你可以很容易浏览整个文档。很快你就会发现，黑白的文本真的会降低你的效率！

如果你想要开始时使用可以在 |init.vim| 文件中放入这个命令 ":syntax enable".

如果你想要在支持颜色的终端中使用语法高亮,你可以把下列内容放入 |init.vim| 文件中: >

	if &t_Co > 1
	   syntax enable
	endif

如果你只想在 GUI 版本中进行语法高亮,可以在 |ginit.vim| 文件中放入这个命令 ":syntax enable".

==============================================================================
*06.2*	颜色错误或者没有颜色?

你看不到颜色有很多原因:

- 你的终端不支持颜色.
	Vim会使用粗体,斜体和下划线展示文字,但是看起来不怎么样. 你可以使用支持颜色的终端.

- 你的终端支持颜色,但Vim不知道.确保$TERM设置是正确的.例如,当使用支持颜色的xterm终端: >

		setenv TERM xterm-color
<
	或者(取决于你的shell): >

		TERM=xterm-color; export TERM

<	设置的终端的名字必须和你使用的终端相同.

- 文件类型不能识别.
        Vim 不可能识别所有文件，而且有时很难说一个文件是什么类型的。试一下这个命令: >

		:set filetype
<
	如果结果是"filetype="那么问题就是出在文件类型上了。你可以手工指定文件类型: >

		:set filetype=fortran

<	要知道哪些类型是有效的，查看一下 $VIMRUNTIME/syntax. 对于 GUI ，你可以使用 Syntax 菜单.设置文件类型也能通过 |modeline| 设置,以便每次编辑它时都会进行高亮.例如, Makefile 文件高亮 (把它放到文件首位): >

		# vim: syntax=make

<	你可能知道怎么检测自己的文件类型，通常的方法是检查文件的扩展名 (就是点后面的内容).  见 |new-filetype| 去告诉Vim怎样确定文件类型.

- 你的文件类型没有语法高亮定义.
	你可以找一个相似的文件类型并人工设置为那种类型。如果觉得不好，你可以自  己写一个, 见 |mysyntaxfile|.


颜色错误:

- 带颜色的文本以至于难以阅读.
	Vim 自动猜测你使用的背景色.如果是黑的 (或者其它深色的色彩)，它会用浅色作为前景色。如果是白的 (或者其它浅色)，它会使用深色作为前景色。如果 Vim 猜错了，文字就很难认了。要解决这个问题，设置一下background' 选项。对于深色: >

		:set background=dark

<	对于亮色背景: >

		:set background=light

<	确保在 ":syntax enable" 命令前调用前两个命令,否则不起作用.你可以使用 ":syntax reset" 在设置 'background' 后使 Vim 重新染色.

- 从下向上滚动使颜色错误.
	Vim 解析文件不是直接解析整个文件. 它只分析你要显示的部分。这样能省不少时间，但也会因此带来错误。一个简单的修正方法是敲 CTRL-L. 或者往回滚动一下再回来.
	真正修复见 |:syn-sync|.一些语法文件会让它看前面的内容,参见相应的语法定义文件.如,|tex.vim| 关于 TeX 语法.

==============================================================================
*06.3*	使用不同的颜色				*:syn-default-override*

如果你不喜欢默认的颜色方案，你可以选另一个色彩方案。在 GUI 版本中可以使用 Edit/Color 菜单。你也可以使用这个命令: >

	:colorscheme evening

"evening" 是色彩方案的名称。还有几种备选方案可以试一下. 从 $VIMRUNTIME/colors 找到他们.

当你找到你喜欢的颜色主题, 添加 ":colorscheme" 命令到你的 |init.vim| 文件.

你可以自己编写色彩方案，方法如下:

1. 选择你满意的颜色主题.把这个文件拷贝到你自己的 Vim 目录中。在 Unix 上，可以这样: >

	!mkdir -p ~/.config/nvim/colors
	!cp $VIMRUNTIME/colors/morning.vim ~/.config/nvim/colors/mine.vim
<
	这样做是因为它知道 $VIMRUNTIME 的值.

2. 编辑这个色彩方案，常用的有下面的这些条目:

	term		黑白终端的属性
	cterm		支持颜色终端的属性
	ctermfg		终端前景色
	ctermbg		终端背景色
	gui		GUI 属性
	guifg		GUI 前景色
	guibg		GUI 背景色

 例如, 使用绿色注释: >

	:highlight Comment ctermfg=green guifg=green
<
   对于 "cterm" 和 "gui" 可以使用粗体和下划线属性修饰. 使用 "bold,underline" 设置两种状态.  查看细节使用 |:highlight| 命令.

3. 告诉 Vim 总使用你这个色彩方案。把如下语句加入你的 vimrc 中: >

	colorscheme mine

如果你要测试一下常用的色彩组合，用如下命令: >

	:runtime syntax/colortest.vim

这样你会看到不同的颜色组合。你可以很容易的看到哪一种可读性好而且漂亮.

==============================================================================
*06.4*	是否使用颜色

使用色彩显示文本会影响效率。如果你觉得显示得很慢，可以临时关掉这个功能: >

	:syntax clear

当你开始编辑另一个文件 (或者同一个文件)，色彩会重新生效.

如果你要完全关闭这个功能: >

	:syntax off

这个命令会停止对所有缓冲区的所有语法高亮.详见 |:syntax-off|.

							*:syn-manual*
如果你只想在几个文件中打开语法高亮，使用: >

	:syntax manual

这个命令激活语法高亮功能，但不会在你开始编辑一个缓冲区时自动生效，要在当前缓冲区中使用高亮，需要设置 'syntax' 选项: >

	:set syntax=ON
<
==============================================================================
*06.5*	带颜色打印				*syntax-printing*

在 MS-Windows 版本上，你可以用如下命令打印当前文件: >

	:hardcopy

你可以获得打印窗口，通过它选择打印机和进行打印设置.如果你有彩色打印机,输出会和在 Vim 中的相同.但当你使用黑暗背景，颜色会适应白纸以便更好查看.

有几个改变 Vim 打印行为的选项:
	'printdevice'
	'printheader'
	'printfont'
	'printoptions'

只打印一定范围的行,使用可视模式选择这些行，如: >

	v100j:hardcopy

"v" 进入可视模式."100j" 向下选中 100 行.然后使用 ":hardcopy" 打印这些行.

如果你有一台 PostScript 打印机，上面的方法也适合 Unix 系统。否则，你必须做一些额外的处理: 你需要先把文件转换成 HTML 类型，然后用浏览器打印.

如下命令把当前文件转换成 HTML 格式: >

	:TOhtml

以防它不工作: >

	:source $VIMRUNTIME/syntax/2html.vim

你发现它会嘎吱嘎吱执行一阵子，(如果文件很大，这可能要花点时间)。之后，Vim 会打开一个新的窗口并显示 HTML 代码。现在把这个文件存下来 (存在哪都不要紧，反正最后你要删掉它的):
>
	:write main.c.html

用你喜欢的浏览器打开这个文件，并通过它打印这个文件。如果一切顺利，这个输出应该与 Vim 中显示的一样.详见 |2html.vim|.处理完后别忘了删掉那个 HTML 文件.

除了打印,你还可以把这个 HTML 文件，放到 WEB 服务器上，让其他人可以通过彩色文本阅读.

==============================================================================
*06.6*	深入阅读

|usr_44.txt|  自定义语法高亮.
||syntax||      所有的细节.

==============================================================================

下一章: |usr_07.txt|  编辑更多文件

Copyright: see |manual-copyright|  vim:tw=78:ts=8:noet:ft=help:norl:
